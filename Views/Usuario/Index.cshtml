@model PagedResult<UsuarioModel>
@{
    ViewData["Title"] = "Gestión de Usuarios";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var filters = ViewBag.Filters as UsuarioFilterOptions ?? new UsuarioFilterOptions();
}

@section Styles {
    <style>
        .user-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(45deg, #007bff, #0056b3);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: bold;
            font-size: 14px;
        }
        .user-info {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        .badge-role {
            font-size: 0.75rem;
        }
        .btn-group-xs .btn {
            padding: 0.25rem 0.5rem;
            font-size: 0.75rem;
        }
    </style>
}

<div class="container-fluid">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="h4 mb-1">Gestión de Usuarios</h2>
                    <p class="text-muted">Administra los usuarios del sistema y sus roles</p>
                </div>
                <a href="@Url.Action("Create")" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>Nuevo Usuario
                </a>
            </div>
        </div>
    </div>

    <!-- Alerts -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>@TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Search and Filters -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" asp-action="Index">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label for="searchTerm" class="form-label">Buscar Usuario</label>
                        <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                               value="@filters.SearchTerm" placeholder="Buscar por nombre o email...">
                    </div>
                    <div class="col-md-3">
                        <label for="pageSize" class="form-label">Registros por página</label>
                        <select class="form-select" id="pageSize" name="pageSize">
                            <option value="5" selected="@(filters.PageSize == 5)">5</option>
                            <option value="10" selected="@(filters.PageSize == 10)">10</option>
                            <option value="25" selected="@(filters.PageSize == 25)">25</option>
                            <option value="50" selected="@(filters.PageSize == 50)">50</option>
                        </select>
                    </div>
                    <div class="col-md-3 d-flex align-items-end">
                        <button type="submit" class="btn btn-outline-primary me-2">
                            <i class="fas fa-search me-1"></i>Buscar
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i>Limpiar
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Users Table -->
    <div class="card">
        <div class="card-header">
            <h5 class="card-title mb-0">
                <i class="fas fa-users me-2"></i>Usuarios del Sistema
                <span class="badge bg-secondary ms-2">@Model.TotalRecords total</span>
            </h5>
        </div>
        <div class="card-body p-0">
            @if (Model.Data.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-dark">
                            <tr>
                                <th>Usuario</th>
                                <th>Email</th>
                                <th>Rol</th>
                                <th>Estado</th>
                                <th>Fecha Ingreso</th>
                                <th width="200">Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var usuario in Model.Data)
                            {
                                <tr>
                                    <td>
                                        <div class="user-info">
                                            <div class="user-avatar">
                                                @{
                                                    var initials = "US";
                                                    if (!string.IsNullOrEmpty(usuario.UserName))
                                                    {
                                                        var words = usuario.UserName.Split(' ');
                                                        if (words.Length >= 2)
                                                        {
                                                            initials = (words[0].Substring(0, 1) + words[1].Substring(0, 1)).ToUpper();
                                                        }
                                                        else if (words.Length == 1 && words[0].Length >= 2)
                                                        {
                                                            initials = words[0].Substring(0, 2).ToUpper();
                                                        }
                                                    }
                                                }
                                                @initials
                                            </div>
                                            <div>
                                                <div class="fw-semibold">@usuario.UserName</div>
                                                <small class="text-muted">ID: @usuario.Id.Substring(0, 8)...</small>
                                            </div>
                                        </div>
                                    </td>
                                    <td>@usuario.Email</td>
                                    <td>
                                        <span class="badge bg-primary badge-role">@usuario.Rol?.Nombre</span>
                                    </td>
                                    <td>
                                        @if (usuario.IdEstado == 1)
                                        {
                                            <span class="badge bg-success">@usuario.Estado?.Nombre</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">@usuario.Estado?.Nombre</span>
                                        }
                                    </td>
                                    <td>
                                        <div>@usuario.FechaDeIngreso.ToString("dd/MM/yyyy")</div>
                                        <small class="text-muted">@usuario.FechaDeIngreso.ToString("HH:mm")</small>
                                    </td>
                                    <td>
                                        <div class="btn-group btn-group-xs" role="group">
                                            <a href="@Url.Action("Edit", new { id = usuario.Id })" 
                                               class="btn btn-outline-primary btn-sm" title="Editar">
                                                <i class="fas fa-edit"></i>
                                            </a>
                                            <a href="@Url.Action("ChangePassword", new { id = usuario.Id })" 
                                               class="btn btn-outline-info btn-sm" title="Cambiar Contraseña">
                                                <i class="fas fa-key"></i>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-users fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No se encontraron usuarios</h5>
                    <p class="text-muted">No hay usuarios que coincidan con los criterios de búsqueda.</p>
                </div>
            }
        </div>
        
        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="card-footer">
                <nav aria-label="Navegación de páginas">
                    <ul class="pagination pagination-sm justify-content-center mb-0">
                        <!-- Primera página -->
                        <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = 1, pageSize = filters.PageSize, searchTerm = filters.SearchTerm })">
                                <i class="fas fa-angle-double-left"></i>
                            </a>
                        </li>
                        
                        <!-- Página anterior -->
                        <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber - 1, pageSize = filters.PageSize, searchTerm = filters.SearchTerm })">
                                <i class="fas fa-angle-left"></i>
                            </a>
                        </li>
                        
                        <!-- Páginas -->
                        @for (int i = Math.Max(1, Model.PageNumber - 2); i <= Math.Min(Model.TotalPages, Model.PageNumber + 2); i++)
                        {
                            <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Index", new { pageNumber = i, pageSize = filters.PageSize, searchTerm = filters.SearchTerm })">@i</a>
                            </li>
                        }
                        
                        <!-- Página siguiente -->
                        <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.PageNumber + 1, pageSize = filters.PageSize, searchTerm = filters.SearchTerm })">
                                <i class="fas fa-angle-right"></i>
                            </a>
                        </li>
                        
                        <!-- Última página -->
                        <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { pageNumber = Model.TotalPages, pageSize = filters.PageSize, searchTerm = filters.SearchTerm })">
                                <i class="fas fa-angle-double-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                <div class="text-center mt-2">
                    <small class="text-muted">
                        Mostrando @((Model.PageNumber - 1) * Model.PageSize + 1) a @(Math.Min(Model.PageNumber * Model.PageSize, Model.TotalRecords)) 
                        de @Model.TotalRecords usuarios
                    </small>
                </div>
            </div>
        }
    </div>
</div>

<!-- Modal de confirmación para desactivar -->
<div class="modal fade" id="confirmDeactivateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Confirmar Desactivación</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>¿Está seguro de que desea desactivar al usuario <strong id="userNameToDeactivate"></strong>?</p>
                <p class="text-muted">El usuario no podrá acceder al sistema hasta que sea reactivado.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <form id="deactivateForm" method="post" asp-action="Delete" class="d-inline">
                    <input type="hidden" id="userIdToDeactivate" name="id" />
                    <button type="submit" class="btn btn-warning">Desactivar Usuario</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function confirmDeactivate(userId, userName) {
            document.getElementById('userIdToDeactivate').value = userId;
            document.getElementById('userNameToDeactivate').textContent = userName;
            
            var modal = new bootstrap.Modal(document.getElementById('confirmDeactivateModal'));
            modal.show();
        }
    </script>
}
