// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PitStop_Parts_Inventario.Data;

#nullable disable

namespace PitStop_Parts_Inventario.Migrations
{
    [DbContext(typeof(PitStopDbContext))]
    partial class PitStopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.AjusteInventarioModel", b =>
                {
                    b.Property<int>("IdAjusteInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdAjusteInventario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAjusteInventario"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdAjusteInventario");

                    b.HasIndex("IdBodega");

                    b.HasIndex("IdUsuario");

                    b.ToTable("AjusteInventarios");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.AjusteInventarioProductoModel", b =>
                {
                    b.Property<int>("IdAjusteInventario")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<int>("CantidadProducto")
                        .HasColumnType("int");

                    b.HasKey("IdAjusteInventario", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("AjusteInventario_Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.BodegaModel", b =>
                {
                    b.Property<int>("IdBodega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdBodega");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBodega"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdBodega");

                    b.HasIndex("IdEstado");

                    b.ToTable("Bodegas");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.BodegaProductoModel", b =>
                {
                    b.Property<int>("IdBodega")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("StockTotal")
                        .HasColumnType("int");

                    b.HasKey("IdBodega", "IdProducto");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdProducto");

                    b.ToTable("Bodega_Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.CategoriaModel", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdCategoria");

                    b.HasIndex("IdEstado");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.CategoriaProductoModel", b =>
                {
                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdCategoria", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("Categoria_Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.EntradaProductoModel", b =>
                {
                    b.Property<int>("IdEntrada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEntrada");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEntrada"));

                    b.Property<int>("CantidadProducto")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBodega")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("IdUsuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdEntrada");

                    b.HasIndex("IdBodega");

                    b.HasIndex("IdProducto");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Entrada_Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.EstadoModel", b =>
                {
                    b.Property<int>("IdEstado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdEstado");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstado"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Funcion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdEstado");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.MarcaModel", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdMarca");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdMarca");

                    b.HasIndex("IdEstado");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProductoModel", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdMarca")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("PrecioCompra")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("SKU")
                        .HasColumnType("int");

                    b.Property<int>("StockActual")
                        .HasColumnType("int");

                    b.Property<int>("StockMax")
                        .HasColumnType("int");

                    b.Property<int>("StockMin")
                        .HasColumnType("int");

                    b.HasKey("IdProducto");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdMarca");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProveedorModel", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdProveedor");

                    b.HasIndex("IdEstado");

                    b.ToTable("Proveedores");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProveedorProductoModel", b =>
                {
                    b.Property<int>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnOrder(0);

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnOrder(1);

                    b.HasKey("IdProveedor", "IdProducto");

                    b.HasIndex("IdProducto");

                    b.ToTable("Proveedor_Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.RolModel", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdRol");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<bool>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Funcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdRol");

                    b.HasIndex("IdEstado");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.UsuarioModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaDeIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.HasIndex("IdRol");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.UsuarioModel", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.AjusteInventarioModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.BodegaModel", "Bodega")
                        .WithMany("AjusteInventarios")
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.UsuarioModel", "Usuario")
                        .WithMany("AjusteInventarios")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bodega");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.AjusteInventarioProductoModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.AjusteInventarioModel", "AjusteInventario")
                        .WithMany("AjusteInventarioProductos")
                        .HasForeignKey("IdAjusteInventario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.ProductoModel", "Producto")
                        .WithMany("AjusteInventarioProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AjusteInventario");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.BodegaModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Bodegas")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.BodegaProductoModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.BodegaModel", "Bodega")
                        .WithMany("BodegaProductos")
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("BodegaProductos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.ProductoModel", "Producto")
                        .WithMany("BodegaProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bodega");

                    b.Navigation("Estado");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.CategoriaModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Categorias")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.CategoriaProductoModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.CategoriaModel", "Categoria")
                        .WithMany("CategoriaProductos")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.ProductoModel", "Producto")
                        .WithMany("CategoriaProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.EntradaProductoModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.BodegaModel", "Bodega")
                        .WithMany("EntradaProductos")
                        .HasForeignKey("IdBodega")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.ProductoModel", "Producto")
                        .WithMany("EntradaProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.UsuarioModel", "Usuario")
                        .WithMany("EntradaProductos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bodega");

                    b.Navigation("Producto");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.MarcaModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Marcas")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProductoModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Productos")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.MarcaModel", "Marca")
                        .WithMany("Productos")
                        .HasForeignKey("IdMarca")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProveedorModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProveedorProductoModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.ProductoModel", "Producto")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.ProveedorModel", "Proveedor")
                        .WithMany("ProveedorProductos")
                        .HasForeignKey("IdProveedor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.RolModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Roles")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.UsuarioModel", b =>
                {
                    b.HasOne("PitStop_Parts_Inventario.Models.EstadoModel", "Estado")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("PitStop_Parts_Inventario.Models.RolModel", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.AjusteInventarioModel", b =>
                {
                    b.Navigation("AjusteInventarioProductos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.BodegaModel", b =>
                {
                    b.Navigation("AjusteInventarios");

                    b.Navigation("BodegaProductos");

                    b.Navigation("EntradaProductos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.CategoriaModel", b =>
                {
                    b.Navigation("CategoriaProductos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.EstadoModel", b =>
                {
                    b.Navigation("BodegaProductos");

                    b.Navigation("Bodegas");

                    b.Navigation("Categorias");

                    b.Navigation("Marcas");

                    b.Navigation("Productos");

                    b.Navigation("Proveedores");

                    b.Navigation("Roles");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.MarcaModel", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProductoModel", b =>
                {
                    b.Navigation("AjusteInventarioProductos");

                    b.Navigation("BodegaProductos");

                    b.Navigation("CategoriaProductos");

                    b.Navigation("EntradaProductos");

                    b.Navigation("ProveedorProductos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.ProveedorModel", b =>
                {
                    b.Navigation("ProveedorProductos");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.RolModel", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("PitStop_Parts_Inventario.Models.UsuarioModel", b =>
                {
                    b.Navigation("AjusteInventarios");

                    b.Navigation("EntradaProductos");
                });
#pragma warning restore 612, 618
        }
    }
}
